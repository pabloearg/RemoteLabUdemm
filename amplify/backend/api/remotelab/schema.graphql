type UserRL @model 
  @auth(rules: [{ allow: owner, operations: [create, delete, update] }]) 
  @key(fields: ["email"], name: "userByEmail", queryField: "userByEmail") {
  email: String!
  firstName: String!
  lastName: String!
  filedId: String
  quantityViolations: Int
  cleanDate: AWSDate
  type: String!  
  subjects: [String]
  appointments: [AppointmentLocal]
}

type AppointmentLocal {
  experimentId: String
  uuid: String
  hour: AWSTime
  day: AWSDate
}

type AppointmentRL @model 
  # @key(fields: ["id","experimentId","day","isTaken"], name: "appointmentByDateAndExperiment",  queryField: "appointmentByDateAndExperiment") 
  # @key(fields: ["id","experimentId","day","hour","isTaken"], name: "appointmentByDateAndExperiment",  queryField: "appointmentByDateAndExperiment") 
  @key(fields: ["day","experimentId","isTaken"], name: "appointmentByDayAndExperimentUserless",  queryField: "appointmentByDayAndExperimentUserless") 
  @key(fields: ["uuid"],name: "appointmentByUuidUserless",  queryField: "appointmentByUuidUserless") {
  id:ID!
  day: String
  hour: String
  uuid: String
  isTaken: String
  experimentId: String
}

type AppointmentTakenRL @model 
  @auth(rules: [{ allow: owner, operations: [create, delete, update] }])
  @key( fields: ["email"])
  @key(fields: ["status"], name: "getByStatus",  queryField: "getByStatus") 
  @key(fields: ["experimentId","day","hour"], name: "appointmentByDateAndExperiment",  queryField: "appointmentByDateAndExperiment") 
  @key(fields: ["uuid" ], name: "getByUuid", queryField: "getByUuid")  {
  email: String!
  day: String!
  hour: String!
  uuid: String!
  firstName: String
  lastName: String
  experimentId: String!
  status: String!
}

type SubjectRL @model 
  @key(name: "subjectById", fields: ["id"], queryField: "subjectById") {
  id: ID!
  name: String!
  students: [Student]
  periodBlock: String!
  university: String!
}

type Student {
  email: String
  firstName: String
  lastName: String
}

type ConfigRL @model{
  experiments: [Experiment]
}

type Experiment {
  uuid: ID!
  name: String!
  iconUrl: String
}